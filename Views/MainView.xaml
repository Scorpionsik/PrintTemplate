<window:WindowExt x:Class="PrintTemplate.Views.MainView"
                  WindowState="Maximized"
        xmlns:window="clr-namespace:CoreWPF.Windows;assembly=CoreWPF"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PrintTemplate.Views"
        xmlns:models="clr-namespace:PrintTemplate.Models"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        mc:Ignorable="d"
                  Background="DarkGray"
        Title="{Binding Path=Title}" Height="450" Width="800">
    <window:WindowExt.Resources>
        <SolidColorBrush x:Key="PanelColor" Color="BurlyWood"/>
    </window:WindowExt.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="35"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <ToolBar Header="Добавить: ">
            <Button Content="Текст" Command="{Binding Path=CommandAddTextElement}"/>
            <Button Content="Рамку" Command="{Binding Path=CommandAddBorderElement}"/>
            <Separator/>
            <Button Content="&lt;" Command="{Binding CommandTurnThePage}" CommandParameter="left"/>
            <TextBox Text="{Binding SelectedPage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <StackPanel Orientation="Horizontal" Margin="0 7 0 0">
                <TextBlock Text=" / "/>
                <TextBlock Text="{Binding Pages.Count}"/>
            </StackPanel>
            <Button Content=">" Command="{Binding CommandTurnThePage}" CommandParameter="right"/>
            <Separator/>
            <Button Content="Добавить страницу" Command="{Binding CommandAddPage}"/>
            <Button Content="Удалить эту страницу" Command="{Binding CommandRemovePage}"/>
            <Separator/>
            <CheckBox Content="Предпросмотр" IsChecked="{Binding EditorVisibility}"/>
            <Separator/>
            <Button Content="Печать!" IsEnabled="{Binding PrintButtonEnable}" Command="{Binding CommandStartPrint}" CommandParameter="{Binding TitlePrint}"/>
            <Separator/>
            <TextBox Width="250px" Text="{Binding TitlePrint, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <Separator/>
            <TextBox Text="{Binding PercentScale, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <TextBlock Text="%" Margin="0 7 0 0"/>
            <Separator/>
            <Button Content="ToString()" Command="{Binding CommandToStringElements}"/>
        </ToolBar>
        <ScrollViewer x:Name="ParentForCanvas" HorizontalScrollBarVisibility="Visible" Grid.Row="1" >
        <ItemsControl 
            x:Name="CurrentCanvas" 
            
            BorderBrush="{StaticResource PanelColor}" 
            ItemsSource="{Binding Elements}" 
            Background="{Binding CurrentColor}"

            >
            <ItemsControl.Resources>
                <!--TextElement-->
                <DataTemplate DataType="{x:Type models:TextElement}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="42"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <DockPanel Background="{StaticResource PanelColor}" Visibility="{Binding Visible}" Grid.Row="0" LastChildFill="False">
                            <GroupBox Header="Height" DockPanel.Dock="Right">
                                <TextBox Text="{Binding Path=Height, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                            </GroupBox>
                            <GroupBox Header="Width" DockPanel.Dock="Right">
                                <TextBox Text="{Binding Path=Width, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                            </GroupBox>

                            <GroupBox Header="FontSize" DockPanel.Dock="Left">
                                <TextBox Text="{Binding Path=FontSize, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                            </GroupBox>
                            <GroupBox Header="FontFamily" Width="140" DockPanel.Dock="Left">
                                <ComboBox ItemsSource="{Binding FontFamilyCollection}" SelectedItem="{Binding FontFamily}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding}" FontFamily="{Binding}" Margin="0 -2 0 0"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                            </GroupBox>
                            <GroupBox Header="TextAlign" Width="75" DockPanel.Dock="Left">
                                <ComboBox ItemsSource="{Binding TextAlignmentCollection}" SelectedItem="{Binding TextAlignment}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding}" Margin="0 -4 0 0"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                            </GroupBox>
                            <CheckBox Content="b" Margin="0 10 0 0" DockPanel.Dock="Left" FontSize="20" FontWeight="Bold" IsChecked="{Binding IsBold}"/>
                            <CheckBox Content="i" Margin="0 10 0 0" DockPanel.Dock="Left" FontSize="20" FontStyle="Italic" IsChecked="{Binding IsItalic}"/>
                        </DockPanel>
                        <TextBox
                            Background="{Binding CurrentTextBoxColor}"
                            Grid.Row="1"
                            Text="{Binding Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            FontSize="{Binding FontSize}"
                            FontFamily="{Binding FontFamily}"
                            FontWeight="{Binding FontWeight}"
                            FontStyle="{Binding FontStyle}"
                            TextAlignment="{Binding TextAlignment}"
                            BorderThickness="0"
                            TextWrapping="Wrap"
                            AcceptsReturn="True"
                                
                            >
                           
                        </TextBox>
                    </Grid>
                </DataTemplate>
                <!--end TextElement-->

                <!--BorderElement-->
                <DataTemplate DataType="{x:Type models:BorderElement}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="42"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <DockPanel Background="{StaticResource PanelColor}" Visibility="{Binding Visible}" Grid.Row="0" LastChildFill="False">
                            <GroupBox Header="Height" DockPanel.Dock="Right">
                                <TextBox Text="{Binding Path=Height, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                            </GroupBox>
                            <GroupBox Header="Width" DockPanel.Dock="Right">
                                <TextBox Text="{Binding Path=Width, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                            </GroupBox>
                            <GroupBox Header="Border" DockPanel.Dock="Left">
                                <TextBox Text="{Binding Path=BorderThickness, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                            </GroupBox>
                        </DockPanel>
                        <Border Grid.Row="1" BorderThickness="{Binding BorderThickness}" BorderBrush="Black"/>
                    </Grid>
                </DataTemplate>
                <!--end BorderElement-->
            </ItemsControl.Resources>
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Canvas IsItemsHost="True"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <local:DraggableSquare 
                        MinHeight="{Binding MinHeight}"
                        MinWidth="{Binding MinWidth}"
                        Width="{Binding Width}" 
                        Height="{Binding Height}"
                        >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDown">
                                <i:InvokeCommandAction Command="{Binding Path=CommandSelectItem}" CommandParameter="{Binding}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Grid>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="10"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <DockPanel Background="{StaticResource PanelColor}" Visibility="{Binding Visible}" Grid.Row="0" LastChildFill="False">
                                <Button Command="{Binding Path=CommandRemoveElement}" CommandParameter="{Binding}" DockPanel.Dock="Right">
                                    <Button.Content>
                                        <TextBlock Text="X" FontSize="8" Margin="0 -5 0 -5"/>
                                    </Button.Content>
                                </Button>
                                <Button Command="{Binding Path=CommandResetSize}" DockPanel.Dock="Left">
                                    <Button.Content>
                                        <TextBlock Text="reset" FontSize="10" Margin="0 -6 0 -5"/>
                                    </Button.Content>
                                </Button>
                            </DockPanel>
                            <Grid Grid.Row="1">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="GotFocus">
                                        <i:InvokeCommandAction Command="{Binding Path=CommandSelectItem}" CommandParameter="{Binding}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <ContentControl Content="{Binding}"/>
                            </Grid>
                        </Grid>
                    </local:DraggableSquare>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
            <ItemsControl.ItemContainerStyle>
                <Style>
                    <!-- а это привязка координат контейнера к VM -->
                    <Setter Property="Canvas.Left" Value="{Binding Position.X}"/>
                    <Setter Property="Canvas.Top" Value="{Binding Position.Y}"/>
                    <Setter Property="Canvas.ZIndex" Value="{Binding ZIndex}"/>
                </Style>
            </ItemsControl.ItemContainerStyle>
        </ItemsControl>
        </ScrollViewer>
    </Grid>
</window:WindowExt>
